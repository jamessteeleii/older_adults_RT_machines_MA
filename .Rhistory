model_function,
tidy_model_function,
study_function_plot,
meta_function_plot,
contrast_function_plot,
model_strength,
tidy_model_strength,
study_strength_plot,
meta_strength_plot,
contrast_strength_plot
)
)
tidy_model_function <- tidy_model_function |>
mutate(across(where(is.numeric), round, 2))
#| message: false
#| warning: false
#| echo: false
#| include: false
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
options(knitr.kable.NA = '')
library(tidyverse)
library(kableExtra)
library(patchwork)
#| message: false
#| warning: false
#| echo: false
targets::tar_load(
c(
model_function,
tidy_model_function,
study_function_plot,
meta_function_plot,
contrast_function_plot,
model_strength,
tidy_model_strength,
study_strength_plot,
meta_strength_plot,
contrast_strength_plot
)
)
tidy_model_function <- tidy_model_function |>
mutate(across(where(is.numeric), round, 2))
tidy_model_strength <- tidy_model_strength |>
mutate(across(where(is.numeric), round, 2))
n_conditions_function <- model_function$data |> group_by(group_code, training_control) |> slice_head() |> ungroup() |> count(training_control)
n_conditions_strength <- model_strength$data |> group_by(group_code, training_control) |> slice_head() |> ungroup() |> count(training_control)
n_conditions_function
n_conditions_strength
model_function
#| message: false
#| warning: false
#| echo: false
#| label: fig-prisma
#| fig-width: 100%
#| fig-height: 100%
#| fig-cap: PRISMA Flow chart for screening process
knitr::include_graphics(here("plots/PRISMA.png"))
#| message: false
#| warning: false
#| echo: false
#| label: fig-prisma
#| fig-width: 100%
#| fig-height: 100%
#| fig-cap: PRISMA Flow chart for screening process
knitr::include_graphics(here::here("plots/PRISMA.png"))
#| message: false
#| warning: false
#| echo: false
#| label: fig-prisma
#| fig-width: 100
#| fig-height: 100
#| fig-cap: PRISMA Flow chart for screening process
knitr::include_graphics(here::here("plots/PRISMA.png"))
#| message: false
#| warning: false
#| echo: false
#| label: fig-prisma
#| fig-cap: PRISMA Flow chart for screening process
knitr::include_graphics(here::here("plots/PRISMA.png"))
targets::tar_load(posterior_draws_meta_function)
targets::tar_load(data_function)
install.packages("signs
")
install.packages("signs")
library(signs)
study_pred_plot <- ggplot(posterior_draws, aes(x = draw,
y = reorder(study, mean_draw),
fill = training_control)) +
geom_vline(xintercept = 0, lty = "dashed") +
# Add individual study data
geom_point(
data = data,
aes(x = yi, y = study, color = training_control),
position = position_jitterdodge(dodge.width = 0.5, jitter.width = 0.1),
alpha = 0.5
) +
stat_halfeye(slab_alpha = .5, position = position_dodge(width = 0.5), size = 0.25, .width = 0.95) +
scale_fill_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
scale_color_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
geom_text(
data = mutate_if(study_labels,
is.numeric, round, 2),
aes(
label = glue::glue("{training_control}: {draw} [{.lower}, {.upper}]"),
x = 3, y =reorder(study, draw), group = training_control
),
size = 2, position = position_dodge(width = 0.75),
hjust = "inward"
) +
labs(
x = "Standardised Mean Change",
title = "Conditional Estimates for Condition by Study"
) +
guides(
fill = "none",
color = "none"
) +
theme_bw() +
theme(axis.title.y = element_blank()) +
theme(title = element_text(size=8))
library(tidyverse)
study_pred_plot <- ggplot(posterior_draws, aes(x = draw,
y = reorder(study, mean_draw),
fill = training_control)) +
geom_vline(xintercept = 0, lty = "dashed") +
# Add individual study data
geom_point(
data = data,
aes(x = yi, y = study, color = training_control),
position = position_jitterdodge(dodge.width = 0.5, jitter.width = 0.1),
alpha = 0.5
) +
stat_halfeye(slab_alpha = .5, position = position_dodge(width = 0.5), size = 0.25, .width = 0.95) +
scale_fill_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
scale_color_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
geom_text(
data = mutate_if(study_labels,
is.numeric, round, 2),
aes(
label = glue::glue("{training_control}: {draw} [{.lower}, {.upper}]"),
x = 3, y =reorder(study, draw), group = training_control
),
size = 2, position = position_dodge(width = 0.75),
hjust = "inward"
) +
labs(
x = "Standardised Mean Change",
title = "Conditional Estimates for Condition by Study"
) +
guides(
fill = "none",
color = "none"
) +
theme_bw() +
theme(axis.title.y = element_blank()) +
theme(title = element_text(size=8))
study_pred_plot <- ggplot(posterior_draws_meta_function, aes(x = draw,
y = reorder(study, mean_draw),
fill = training_control)) +
geom_vline(xintercept = 0, lty = "dashed") +
# Add individual study data_function
geom_point(
data_function = data_function,
aes(x = yi, y = study, color = training_control),
position = position_jitterdodge(dodge.width = 0.5, jitter.width = 0.1),
alpha = 0.5
) +
stat_halfeye(slab_alpha = .5, position = position_dodge(width = 0.5), size = 0.25, .width = 0.95) +
scale_fill_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
scale_color_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
geom_text(
data_function = mutate_if(study_labels,
is.numeric, round, 2),
aes(
label = glue::glue("{training_control}: {draw} [{.lower}, {.upper}]"),
x = 3, y =reorder(study, draw), group = training_control
),
size = 2, position = position_dodge(width = 0.75),
hjust = "inward"
) +
labs(
x = "Standardised Mean Change",
title = "Conditional Estimates for Condition by Study"
) +
guides(
fill = "none",
color = "none"
) +
theme_bw() +
theme(axis.title.y = element_blank()) +
theme(title = element_text(size=8))
study_pred_plot <- ggplot(posterior_draws_meta_function, aes(x = draw,
y = reorder(study, mean_draw),
fill = training_control)) +
geom_vline(xintercept = 0, lty = "dashed") +
# Add individual study data_function
geom_point(
data = data_function,
aes(x = yi, y = study, color = training_control),
position = position_jitterdodge(dodge.width = 0.5, jitter.width = 0.1),
alpha = 0.5
) +
stat_halfeye(slab_alpha = .5, position = position_dodge(width = 0.5), size = 0.25, .width = 0.95) +
scale_fill_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
scale_color_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
geom_text(
data = mutate_if(study_labels,
is.numeric, round, 2),
aes(
label = glue::glue("{training_control}: {draw} [{.lower}, {.upper}]"),
x = 3, y =reorder(study, draw), group = training_control
),
size = 2, position = position_dodge(width = 0.75),
hjust = "inward"
) +
labs(
x = "Standardised Mean Change",
title = "Conditional Estimates for Condition by Study"
) +
guides(
fill = "none",
color = "none"
) +
theme_bw() +
theme(axis.title.y = element_blank()) +
theme(title = element_text(size=8))
library(tidybayes)
study_pred_plot <- ggplot(posterior_draws_meta_function, aes(x = draw,
y = reorder(study, mean_draw),
fill = training_control)) +
geom_vline(xintercept = 0, lty = "dashed") +
# Add individual study data_function
geom_point(
data = data_function,
aes(x = yi, y = study, color = training_control),
position = position_jitterdodge(dodge.width = 0.5, jitter.width = 0.1),
alpha = 0.5
) +
stat_halfeye(slab_alpha = .5, position = position_dodge(width = 0.5), size = 0.25, .width = 0.95) +
scale_fill_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
scale_color_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
geom_text(
data = mutate_if(study_labels,
is.numeric, round, 2),
aes(
label = glue::glue("{training_control}: {draw} [{.lower}, {.upper}]"),
x = 3, y =reorder(study, draw), group = training_control
),
size = 2, position = position_dodge(width = 0.75),
hjust = "inward"
) +
labs(
x = "Standardised Mean Change",
title = "Conditional Estimates for Condition by Study"
) +
guides(
fill = "none",
color = "none"
) +
theme_bw() +
theme(axis.title.y = element_blank()) +
theme(title = element_text(size=8))
study_labels <- posterior_draws_meta_function |>
group_by(study, training_control) |>
mean_qi(draw)
posterior_draws_meta_function
study_labels <- posterior_draws_meta_function |>
group_by(study_code, training_control) |>
mean_qi(draw)
study_pred_plot <- ggplot(posterior_draws_meta_function, aes(x = draw,
y = reorder(study, mean_draw),
fill = training_control)) +
geom_vline(xintercept = 0, lty = "dashed") +
# Add individual study data_function
geom_point(
data = data_function,
aes(x = yi, y = study, color = training_control),
position = position_jitterdodge(dodge.width = 0.5, jitter.width = 0.1),
alpha = 0.5
) +
stat_halfeye(slab_alpha = .5, position = position_dodge(width = 0.5), size = 0.25, .width = 0.95) +
scale_fill_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
scale_color_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
geom_text(
data = mutate_if(study_labels,
is.numeric, round, 2),
aes(
label = glue::glue("{training_control}: {draw} [{.lower}, {.upper}]"),
x = 3, y =reorder(study, draw), group = training_control
),
size = 2, position = position_dodge(width = 0.75),
hjust = "inward"
) +
labs(
x = "Standardised Mean Change",
title = "Conditional Estimates for Condition by Study"
) +
guides(
fill = "none",
color = "none"
) +
theme_bw() +
theme(axis.title.y = element_blank()) +
theme(title = element_text(size=8))
study_pred_plot
study_pred_plot <- ggplot(posterior_draws_meta_function, aes(x = draw,
y = reorder(study, mean_draw),
fill = training_control)) +
geom_vline(xintercept = 0, lty = "dashed") +
# Add individual study data_function
geom_point(
data = data_function,
aes(x = yi, y = study_code, color = training_control),
position = position_jitterdodge(dodge.width = 0.5, jitter.width = 0.1),
alpha = 0.5
) +
stat_halfeye(slab_alpha = .5, position = position_dodge(width = 0.5), size = 0.25, .width = 0.95) +
scale_fill_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
scale_color_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
geom_text(
data = mutate_if(study_labels,
is.numeric, round, 2),
aes(
label = glue::glue("{training_control}: {draw} [{.lower}, {.upper}]"),
x = 3, y =reorder(study, draw), group = training_control
),
size = 2, position = position_dodge(width = 0.75),
hjust = "inward"
) +
labs(
x = "Standardised Mean Change",
title = "Conditional Estimates for Condition by Study"
) +
guides(
fill = "none",
color = "none"
) +
theme_bw() +
theme(axis.title.y = element_blank()) +
theme(title = element_text(size=8))
study_pred_plot
study_pred_plot <- ggplot(posterior_draws_meta_function, aes(x = draw,
y = reorder(study, mean_draw),
fill = training_control)) +
geom_vline(xintercept = 0, lty = "dashed") +
# Add individual study data_function
geom_point(
data = data_function,
aes(x = yi, y = study_code, color = training_control),
position = position_jitterdodge(dodge.width = 0.5, jitter.width = 0.1),
alpha = 0.5
) +
stat_halfeye(slab_alpha = .5, position = position_dodge(width = 0.5), size = 0.25, .width = 0.95) +
scale_fill_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
scale_color_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
geom_text(
data = mutate_if(study_labels,
is.numeric, round, 2),
aes(
label = glue::glue("{training_control}: {draw} [{.lower}, {.upper}]"),
x = 3, y =reorder(study_code, draw), group = training_control
),
size = 2, position = position_dodge(width = 0.75),
hjust = "inward"
) +
labs(
x = "Standardised Mean Change",
title = "Conditional Estimates for Condition by Study"
) +
guides(
fill = "none",
color = "none"
) +
theme_bw() +
theme(axis.title.y = element_blank()) +
theme(title = element_text(size=8))
study_pred_plot
study_pred_plot <- ggplot(posterior_draws_meta_function, aes(x = draw,
y = reorder(study_code, mean_draw),
fill = training_control)) +
geom_vline(xintercept = 0, lty = "dashed") +
# Add individual study data_function
geom_point(
data = data_function,
aes(x = yi, y = study_code, color = training_control),
position = position_jitterdodge(dodge.width = 0.5, jitter.width = 0.1),
alpha = 0.5
) +
stat_halfeye(slab_alpha = .5, position = position_dodge(width = 0.5), size = 0.25, .width = 0.95) +
scale_fill_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
scale_color_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
geom_text(
data = mutate_if(study_labels,
is.numeric, round, 2),
aes(
label = glue::glue("{training_control}: {draw} [{.lower}, {.upper}]"),
x = 3, y =reorder(study_code, draw), group = training_control
),
size = 2, position = position_dodge(width = 0.75),
hjust = "inward"
) +
labs(
x = "Standardised Mean Change",
title = "Conditional Estimates for Condition by Study"
) +
guides(
fill = "none",
color = "none"
) +
theme_bw() +
theme(axis.title.y = element_blank()) +
theme(title = element_text(size=8))
study_pred_plot
View(posterior_draws_meta_function)
ggplot(posterior_draws_meta_function, aes(x = draw,
y = reorder(study_code, mean(draw)),
fill = training_control)) +
geom_vline(xintercept = 0, lty = "dashed") +
# Add individual study data_function
geom_point(
data = data_function,
aes(x = yi, y = study_code, color = training_control),
position = position_jitterdodge(dodge.width = 0.5, jitter.width = 0.1),
alpha = 0.5
) +
stat_halfeye(slab_alpha = .5, position = position_dodge(width = 0.5), size = 0.25, .width = 0.95) +
scale_fill_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
scale_color_manual(values = c("#56B4E9", "#E69F00", "#009E73")) +
geom_text(
data = mutate_if(study_labels,
is.numeric, round, 2),
aes(
label = glue::glue("{training_control}: {draw} [{.lower}, {.upper}]"),
x = 3, y =reorder(study_code, draw), group = training_control
),
size = 2, position = position_dodge(width = 0.75),
hjust = "inward"
) +
labs(
x = "Standardised Mean Change",
title = "Conditional Estimates for Condition by Study"
) +
guides(
fill = "none",
color = "none"
) +
theme_bw() +
theme(axis.title.y = element_blank()) +
theme(title = element_text(size=8))
sleep
library(patchwork)
(sleep |>
ggplot(aes(x=group, y=extra)) +
geom_label(label = signs(extra, accuracy = .1))
)
sleep |>
ggplot(aes(x=group, y=extra)) +
geom_label(label = signs(extra, accuracy = .1))
(sleep |>
ggplot(aes(x=group, y=extra)) +
geom_label(aes(label = signs(extra, accuracy = .1)))
)
(sleep |>
ggplot(aes(x=group, y=extra)) +
geom_text(aes(label = signs(extra, accuracy = .1)))
)
(sleep |>
ggplot(aes(x=group, y=extra)) +
geom_text(aes(label = signs(extra, accuracy = .1)))
) +
(sleep |>
ggplot(aes(x=group, y=extra)) +
geom_text(aes(label = extra))
)
(sleep |>
ggplot(aes(x=group, y=extra)) +
geom_text(aes(label = signs(extra, accuracy = .1))) +
annotate("text", x = 1.5, y=2,
label = glue::glue("minus sign i.e., {signs(c(-1,-2,-3))} etc."))
) +
(sleep |>
ggplot(aes(x=group, y=extra)) +
geom_text(aes(label = extra)) +
annotate("text", x = 1.5, y=2,
label = glue::glue("hyphen i.e., {c(-1,-2,-3)} etc."))
)
(sleep |>
ggplot(aes(x=group, y=extra)) +
geom_text(aes(label = signs(extra, accuracy = .1))) +
annotate("text", x = 1.5, y=2,
label = glue::glue("minus sign e.g., {signs(-1)} etc."))
) +
(sleep |>
ggplot(aes(x=group, y=extra)) +
geom_text(aes(label = extra)) +
annotate("text", x = 1.5, y=2,
label = glue::glue("hyphen e.g., {-1} etc."))
)
targets::tar_visnetwork()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
?signs
study_labels
targets::tar_load(posterior_draws_contrast_function)
posterior_draws_contrast_function |>
mean_qi()
posterior_draws_contrast_function
posterior_draws_contrast_function |>
mean_qi(draw)
targets::tar_make()
